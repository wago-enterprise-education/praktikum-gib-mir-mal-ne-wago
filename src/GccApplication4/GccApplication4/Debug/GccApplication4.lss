
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000092  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000118  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005d6  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004d0  00000000  00000000  0000074a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000260  00000000  00000000  00000c1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000030f  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  000011af  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001287  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>
  1e:	07 c0       	rjmp	.+14     	; 0x2e <__bad_interrupt>
  20:	06 c0       	rjmp	.+12     	; 0x2e <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf ed       	ldi	r28, 0xDF	; 223
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	30 c0       	rjmp	.+96     	; 0x8e <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:
#include <util/delay.h>

int main(void)
{
    /* Replace with your application code */
	DDRA = 0b11111111;
  30:	8f ef       	ldi	r24, 0xFF	; 255
  32:	8a bb       	out	0x1a, r24	; 26
	
    while (1) 
    {
		PORTA = 0b00001110;
  34:	8e e0       	ldi	r24, 0x0E	; 14
  36:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  38:	2f ef       	ldi	r18, 0xFF	; 255
  3a:	80 e7       	ldi	r24, 0x70	; 112
  3c:	92 e0       	ldi	r25, 0x02	; 2
  3e:	21 50       	subi	r18, 0x01	; 1
  40:	80 40       	sbci	r24, 0x00	; 0
  42:	90 40       	sbci	r25, 0x00	; 0
  44:	e1 f7       	brne	.-8      	; 0x3e <__SP_L__+0x1>
  46:	00 c0       	rjmp	.+0      	; 0x48 <__SREG__+0x9>
  48:	00 00       	nop
		_delay_ms(100);
		PORTA = 0b00001101;
  4a:	8d e0       	ldi	r24, 0x0D	; 13
  4c:	8b bb       	out	0x1b, r24	; 27
  4e:	2f ef       	ldi	r18, 0xFF	; 255
  50:	80 e7       	ldi	r24, 0x70	; 112
  52:	92 e0       	ldi	r25, 0x02	; 2
  54:	21 50       	subi	r18, 0x01	; 1
  56:	80 40       	sbci	r24, 0x00	; 0
  58:	90 40       	sbci	r25, 0x00	; 0
  5a:	e1 f7       	brne	.-8      	; 0x54 <__SREG__+0x15>
  5c:	00 c0       	rjmp	.+0      	; 0x5e <__SREG__+0x1f>
  5e:	00 00       	nop
		_delay_ms(100);
		PORTA = 0b00001011;
  60:	8b e0       	ldi	r24, 0x0B	; 11
  62:	8b bb       	out	0x1b, r24	; 27
  64:	2f ef       	ldi	r18, 0xFF	; 255
  66:	80 e7       	ldi	r24, 0x70	; 112
  68:	92 e0       	ldi	r25, 0x02	; 2
  6a:	21 50       	subi	r18, 0x01	; 1
  6c:	80 40       	sbci	r24, 0x00	; 0
  6e:	90 40       	sbci	r25, 0x00	; 0
  70:	e1 f7       	brne	.-8      	; 0x6a <__SREG__+0x2b>
  72:	00 c0       	rjmp	.+0      	; 0x74 <__SREG__+0x35>
  74:	00 00       	nop
		_delay_ms(100);
		PORTA = 0b00000111;
  76:	87 e0       	ldi	r24, 0x07	; 7
  78:	8b bb       	out	0x1b, r24	; 27
  7a:	2f ef       	ldi	r18, 0xFF	; 255
  7c:	80 e7       	ldi	r24, 0x70	; 112
  7e:	92 e0       	ldi	r25, 0x02	; 2
  80:	21 50       	subi	r18, 0x01	; 1
  82:	80 40       	sbci	r24, 0x00	; 0
  84:	90 40       	sbci	r25, 0x00	; 0
  86:	e1 f7       	brne	.-8      	; 0x80 <__DATA_REGION_LENGTH__>
  88:	00 c0       	rjmp	.+0      	; 0x8a <__DATA_REGION_LENGTH__+0xa>
  8a:	00 00       	nop
  8c:	d3 cf       	rjmp	.-90     	; 0x34 <main+0x4>

0000008e <_exit>:
  8e:	f8 94       	cli

00000090 <__stop_program>:
  90:	ff cf       	rjmp	.-2      	; 0x90 <__stop_program>
